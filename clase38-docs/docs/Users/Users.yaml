paths: 
  /api/users/:
    get:
      summary: Obtiene todos los usuarios
      tags: 
        - Users
      responses:
        "200":
          description: Los usuarios fueron obtenidos correctamente de la base de datos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/User'
        "500":
          description: Error interno del server, por query defectuosa
    post:
      summary: Crea un usuario
      tags:
        - Users
  /api/users/{uid}: 
    get: 
      summary: Obtiene un usuario a partir de uid
      tags: 
        - Users
      parameters:
      - name: uid
        in: path
        required: true
        description: id del usuario que se debe solicitar
        schema: 
          $type: String
      responses:
        "200":
        description: El usuario fué obtenido correctamente de la base de datos
        content: 
          application/json:
            schema:
              $ref: '#components/schema/User'
    put:
      summary: Se actualiza un usuario segun uid
      tags: 
        - Users
      parameters:
      - name: uid
        in: path
        required: true
        description: El id del usuario
        schema: 
          $type: string
      requestBody: 
        required: true
        content:
          application/json:
            schema: 
              $ref: '#components/requestBodies/updateUser'
components:
  schemas: 
    User:
      type: object
      properties:
        id:
          type: String
          description: Id autogenerado de mongo
        first_name:
          type: String
          description: Primer nombre del usuario
        lastst_name:
          type: String
          description: Segundo nombre del usuario
        email:
          type: String
          description: Email del usuario
        password:
          type: String
          description: Password del usuario
      example:
        _id: ObjectId("asdfasfdf6asdfasdj5fs")
        first_name: Federico
        last_name: Osandón
        email: fede@gmail.com
        password: fasdf.$asldkfh.&$asdfasdfa.asdfa
  requestBodies:
    updateUser:
      type: object
      properties:
        first_name:
          type: String
          description: Primer nombre del usuario
        lastst_name:
          type: String
          description: Segundo nombre del usuario
        email:
          type: String
          description: Email del usuario
        password:
          type: String
          description: Password del usuario
      example:
        first_name: Federico
        last_name: Osandón
        email: federico@gmail.com
        password: 123456